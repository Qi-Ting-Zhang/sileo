name: Build and Deploy Sileo Repo to GitHub Pages

on:
  push:
    branches: ["main"]
    paths:
      - 'debs/**'  # 监听 debs 目录下的文件变化

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dpkg-scanpackages
        run: sudo apt-get update && sudo apt-get install -y dpkg-dev

      - name: Generate Packages file
        run: |
          mkdir -p dist
          dpkg-scanpackages debs /dev/null > Packages
          bzip2 -c Packages > Packages.bz2
          gzip -c Packages > Packages.gz

          # 生成固定的 Release 文件
          echo "Origin: 你看，又急" > Release
          echo "Label: 贾队长" >> Release
          echo "Suite: stable" >> Release
          echo "Version: 1.0" >> Release
          echo "Codename: qtz" >> Release
          echo "Architectures: iphoneos-arm64 iphoneos-arm64e" >> Release
          echo "Components: main" >> Release
          echo "Description: 自用插件分享，有问题请卸载！！！" >> Release
          echo "MD5Sum:" >> Release
          echo " $(md5sum Packages | cut -d ' ' -f 1) $(stat -c%s Packages) Packages" >> Release
          echo " $(md5sum Packages.bz2 | cut -d ' ' -f 1) $(stat -c%s Packages.bz2) Packages.bz2" >> Release
          echo " $(md5sum Packages.gz | cut -d ' ' -f 1) $(stat -c%s Packages.gz) Packages.gz" >> Release

      - name: Commit and push updated files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用默认的 GITHUB_TOKEN
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin main
          git add Packages Packages.bz2 Packages.gz Release
          git commit -m "Update Packages files" || echo "No changes to commit"
          git push origin main || echo "Push failed"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4